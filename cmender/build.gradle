import java.text.SimpleDateFormat

plugins {
    id "java"
    id "distribution"
    id 'com.github.johnrengelman.shadow' version '8.1.0' // Replace with the latest version
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "commons-cli:commons-cli:1.8.0"
    implementation "org.apache.logging.log4j:log4j-core:2.23.1"
    compileOnly "org.projectlombok:lombok:1.18.34"
    annotationProcessor "org.projectlombok:lombok:1.18.34"

    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
    testImplementation platform("org.junit:junit-bom:5.10.0")
    testImplementation "org.junit.jupiter:junit-jupiter"
}

sourceSets {
    main {
        java {
            srcDir "src"
        }

        resources {
            srcDir "resources"
        }
    }

    test {
        java {
            srcDir "test"
        }

        resources {
            srcDir "resources"
        }
    }
}

jar {
    archiveFileName.set("${jarName}.jar")
    manifest {
        attributes (
                "Main-Class": mainClass,
                "Multi-Release": true,
                "Created-By": "Gradle ${gradle.gradleVersion}, JDK ${JavaVersion.current().toString()} ${System.getProperty('java.vendor')}",
                "Implementation-Title": project.name,
                "X-Implementation-Description": project.description,
                "Implementation-Version": project.version,
                "Implementation-Vendor": vendor,
                "X-Group": project.group,
                "X-Release-Date": new SimpleDateFormat("yyyy-MM-dd").format(new Date())
        )
    }
}

shadowJar {
    archiveBaseName.set("${jarName}")
    archiveClassifier.set('')
    archiveVersion.set('')
}

javadoc {
    // Set the title of the generated Javadoc
    options {
        title = "CMender Documentation"
        options.addStringOption('Xdoclint:all', '-quiet')
        options.addStringOption('charset', 'UTF-8')
    }

    // Specify source directories if you have multiple source sets
    source = sourceSets.main.allJava

    // Configure the Javadoc task to include specific packages or classes
    exclude '**/internal/**' // Exclude internal packages
}
